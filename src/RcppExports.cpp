// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// read_snpData
Rcpp::List read_snpData(Rcpp::CharacterVector file, char sep, char quote, bool rowNames, Rcpp::CharacterVector na_str, int nrows);
RcppExport SEXP _qtcat_read_snpData(SEXP fileSEXP, SEXP sepSEXP, SEXP quoteSEXP, SEXP rowNamesSEXP, SEXP na_strSEXP, SEXP nrowsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type file(fileSEXP);
    Rcpp::traits::input_parameter< char >::type sep(sepSEXP);
    Rcpp::traits::input_parameter< char >::type quote(quoteSEXP);
    Rcpp::traits::input_parameter< bool >::type rowNames(rowNamesSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type na_str(na_strSEXP);
    Rcpp::traits::input_parameter< int >::type nrows(nrowsSEXP);
    rcpp_result_gen = Rcpp::wrap(read_snpData(file, sep, quote, rowNames, na_str, nrows));
    return rcpp_result_gen;
END_RCPP
}
// corDist
double corDist(RawVector x, RawVector y);
RcppExport SEXP _qtcat_corDist(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< RawVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(corDist(x, y));
    return rcpp_result_gen;
END_RCPP
}
// corDists
NumericVector corDists(RawMatrix x);
RcppExport SEXP _qtcat_corDists(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(corDists(x));
    return rcpp_result_gen;
END_RCPP
}
// corPreIdenticals
List corPreIdenticals(RawMatrix x, const int step);
RcppExport SEXP _qtcat_corPreIdenticals(SEXP xSEXP, SEXP stepSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< const int >::type step(stepSEXP);
    rcpp_result_gen = Rcpp::wrap(corPreIdenticals(x, step));
    return rcpp_result_gen;
END_RCPP
}
// corIdenticals
List corIdenticals(RawMatrix x, IntegerVector clustIdx);
RcppExport SEXP _qtcat_corIdenticals(SEXP xSEXP, SEXP clustIdxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clustIdx(clustIdxSEXP);
    rcpp_result_gen = Rcpp::wrap(corIdenticals(x, clustIdx));
    return rcpp_result_gen;
END_RCPP
}
// joinCorIdenticals
List joinCorIdenticals(int n, List preclust, List ClustMedo);
RcppExport SEXP _qtcat_joinCorIdenticals(SEXP nSEXP, SEXP preclustSEXP, SEXP ClustMedoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< List >::type preclust(preclustSEXP);
    Rcpp::traits::input_parameter< List >::type ClustMedo(ClustMedoSEXP);
    rcpp_result_gen = Rcpp::wrap(joinCorIdenticals(n, preclust, ClustMedo));
    return rcpp_result_gen;
END_RCPP
}
// corClarans
List corClarans(RawMatrix x, const int k, const int maxNeigbours);
RcppExport SEXP _qtcat_corClarans(SEXP xSEXP, SEXP kSEXP, SEXP maxNeigboursSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< const int >::type k(kSEXP);
    Rcpp::traits::input_parameter< const int >::type maxNeigbours(maxNeigboursSEXP);
    rcpp_result_gen = Rcpp::wrap(corClarans(x, k, maxNeigbours));
    return rcpp_result_gen;
END_RCPP
}
// corMedoids
IntegerVector corMedoids(RawMatrix x, IntegerVector clusters);
RcppExport SEXP _qtcat_corMedoids(SEXP xSEXP, SEXP clustersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clusters(clustersSEXP);
    rcpp_result_gen = Rcpp::wrap(corMedoids(x, clusters));
    return rcpp_result_gen;
END_RCPP
}
// design
NumericMatrix design(RawMatrix x);
RcppExport SEXP _qtcat_design(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(design(x));
    return rcpp_result_gen;
END_RCPP
}
// afreq
NumericVector afreq(RawMatrix x, bool maf);
RcppExport SEXP _qtcat_afreq(SEXP xSEXP, SEXP mafSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type maf(mafSEXP);
    rcpp_result_gen = Rcpp::wrap(afreq(x, maf));
    return rcpp_result_gen;
END_RCPP
}
// hetfreq
NumericVector hetfreq(RawMatrix x, int dim);
RcppExport SEXP _qtcat_hetfreq(SEXP xSEXP, SEXP dimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    rcpp_result_gen = Rcpp::wrap(hetfreq(x, dim));
    return rcpp_result_gen;
END_RCPP
}
// nafreq
NumericVector nafreq(RawMatrix x, int dim);
RcppExport SEXP _qtcat_nafreq(SEXP xSEXP, SEXP dimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    rcpp_result_gen = Rcpp::wrap(nafreq(x, dim));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_qtcat_read_snpData", (DL_FUNC) &_qtcat_read_snpData, 6},
    {"_qtcat_corDist", (DL_FUNC) &_qtcat_corDist, 2},
    {"_qtcat_corDists", (DL_FUNC) &_qtcat_corDists, 1},
    {"_qtcat_corPreIdenticals", (DL_FUNC) &_qtcat_corPreIdenticals, 2},
    {"_qtcat_corIdenticals", (DL_FUNC) &_qtcat_corIdenticals, 2},
    {"_qtcat_joinCorIdenticals", (DL_FUNC) &_qtcat_joinCorIdenticals, 3},
    {"_qtcat_corClarans", (DL_FUNC) &_qtcat_corClarans, 3},
    {"_qtcat_corMedoids", (DL_FUNC) &_qtcat_corMedoids, 2},
    {"_qtcat_design", (DL_FUNC) &_qtcat_design, 1},
    {"_qtcat_afreq", (DL_FUNC) &_qtcat_afreq, 2},
    {"_qtcat_hetfreq", (DL_FUNC) &_qtcat_hetfreq, 2},
    {"_qtcat_nafreq", (DL_FUNC) &_qtcat_nafreq, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_qtcat(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}

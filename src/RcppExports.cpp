// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// read_snpData
Rcpp::List read_snpData(Rcpp::CharacterVector file, char sep, char quote, bool rowNames, Rcpp::CharacterVector na_str, int nrows);
RcppExport SEXP qtcat_read_snpData(SEXP fileSEXP, SEXP sepSEXP, SEXP quoteSEXP, SEXP rowNamesSEXP, SEXP na_strSEXP, SEXP nrowsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type file(fileSEXP);
    Rcpp::traits::input_parameter< char >::type sep(sepSEXP);
    Rcpp::traits::input_parameter< char >::type quote(quoteSEXP);
    Rcpp::traits::input_parameter< bool >::type rowNames(rowNamesSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type na_str(na_strSEXP);
    Rcpp::traits::input_parameter< int >::type nrows(nrowsSEXP);
    __result = Rcpp::wrap(read_snpData(file, sep, quote, rowNames, na_str, nrows));
    return __result;
END_RCPP
}
// corDist
double corDist(RawVector x, RawVector y);
RcppExport SEXP qtcat_corDist(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< RawVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< RawVector >::type y(ySEXP);
    __result = Rcpp::wrap(corDist(x, y));
    return __result;
END_RCPP
}
// corDists
NumericVector corDists(RawMatrix x);
RcppExport SEXP qtcat_corDists(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    __result = Rcpp::wrap(corDists(x));
    return __result;
END_RCPP
}
// corPreIdenticals
List corPreIdenticals(RawMatrix x, const int step);
RcppExport SEXP qtcat_corPreIdenticals(SEXP xSEXP, SEXP stepSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< const int >::type step(stepSEXP);
    __result = Rcpp::wrap(corPreIdenticals(x, step));
    return __result;
END_RCPP
}
// corIdenticals
List corIdenticals(RawMatrix x, IntegerVector clustIdx);
RcppExport SEXP qtcat_corIdenticals(SEXP xSEXP, SEXP clustIdxSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clustIdx(clustIdxSEXP);
    __result = Rcpp::wrap(corIdenticals(x, clustIdx));
    return __result;
END_RCPP
}
// joinCorIdenticals
List joinCorIdenticals(int n, List preclust, List ClustMedo);
RcppExport SEXP qtcat_joinCorIdenticals(SEXP nSEXP, SEXP preclustSEXP, SEXP ClustMedoSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< List >::type preclust(preclustSEXP);
    Rcpp::traits::input_parameter< List >::type ClustMedo(ClustMedoSEXP);
    __result = Rcpp::wrap(joinCorIdenticals(n, preclust, ClustMedo));
    return __result;
END_RCPP
}
// corClarans
List corClarans(RawMatrix x, const int k, const int maxNeigbours);
RcppExport SEXP qtcat_corClarans(SEXP xSEXP, SEXP kSEXP, SEXP maxNeigboursSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< const int >::type k(kSEXP);
    Rcpp::traits::input_parameter< const int >::type maxNeigbours(maxNeigboursSEXP);
    __result = Rcpp::wrap(corClarans(x, k, maxNeigbours));
    return __result;
END_RCPP
}
// corMedoids
IntegerVector corMedoids(RawMatrix x, IntegerVector clusters);
RcppExport SEXP qtcat_corMedoids(SEXP xSEXP, SEXP clustersSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clusters(clustersSEXP);
    __result = Rcpp::wrap(corMedoids(x, clusters));
    return __result;
END_RCPP
}
// design
NumericMatrix design(RawMatrix x, IntegerVector inx1, IntegerVector inx2);
RcppExport SEXP qtcat_design(SEXP xSEXP, SEXP inx1SEXP, SEXP inx2SEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type inx1(inx1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type inx2(inx2SEXP);
    __result = Rcpp::wrap(design(x, inx1, inx2));
    return __result;
END_RCPP
}
// freqs2
List freqs2(RawMatrix x);
RcppExport SEXP qtcat_freqs2(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    __result = Rcpp::wrap(freqs2(x));
    return __result;
END_RCPP
}
// freq1
NumericVector freq1(RawMatrix x);
RcppExport SEXP qtcat_freq1(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    __result = Rcpp::wrap(freq1(x));
    return __result;
END_RCPP
}
